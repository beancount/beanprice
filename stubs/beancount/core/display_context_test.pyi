import unittest
from beancount.core import display_context as display_context
from beancount.core.display_context import Align as Align, Precision as Precision
from typing import Any

def decimalize(number_list: Any): ...

class DisplayContextBaseTest(unittest.TestCase):
    alignment: Any = ...
    def assertFormatNumbers(self, number_strings: Any, expected_fmt_numbers: Any, **build_args: Any) -> None: ...

class TestDisplayContext(DisplayContextBaseTest):
    def test_dump(self) -> None: ...

class TestDisplayContextNatural(DisplayContextBaseTest):
    alignment: Any = ...
    def test_natural_uninitialized(self) -> None: ...
    def test_natural_no_clear_mode(self) -> None: ...
    def test_natural_clear_mode(self) -> None: ...
    def test_natural_maximum(self) -> None: ...
    def test_natural_commas(self) -> None: ...
    def test_natural_reserved(self) -> None: ...

class TestDisplayContextRight(DisplayContextBaseTest):
    alignment: Any = ...
    def test_right_uninitialized(self) -> None: ...
    def test_right_sign(self) -> None: ...
    def test_right_integer(self) -> None: ...
    def test_right_integer_commas(self) -> None: ...
    def test_right_fractional(self) -> None: ...
    def test_right_fractional_commas(self) -> None: ...

class TestDisplayContextDot(DisplayContextBaseTest):
    alignment: Any = ...
    def test_dot_uninitialized(self) -> None: ...
    def test_dot_basic(self) -> None: ...
    def test_dot_basic_multi(self) -> None: ...
    def test_dot_sign(self) -> None: ...
    def test_dot_integer(self) -> None: ...
    def test_dot_integer_commas(self) -> None: ...
    def test_dot_fractional(self) -> None: ...
    def test_dot_fractional_commas(self) -> None: ...

class TestDisplayContextQuantize(unittest.TestCase):
    def test_quantize_basic(self) -> None: ...
