from beancount.core import account as account
from beancount.core.data import Close as Close, Commodity as Commodity, Open as Open, Transaction as Transaction
from typing import Any, Optional

class GetAccounts:
    def get_accounts_use_map(self, entries: Any): ...
    def get_entry_accounts(self, entry: Any): ...
    def Transaction(_: Any, entry: Any) -> None: ...
    def Pad(_: Any, entry: Any): ...
    Open: Any = ...
    Close: Any = ...
    Balance: Any = ...
    Note: Any = ...
    Document: Any = ...
    Commodity: Any = ...
    Event: Any = ...
    Query: Any = ...
    Price: Any = ...
    Custom: Any = ...

def get_accounts_use_map(entries: Any): ...
def get_accounts(entries: Any): ...
def get_entry_accounts(entry: Any): ...
def get_account_components(entries: Any): ...
def get_all_tags(entries: Any): ...
def get_all_payees(entries: Any): ...
def get_all_links(entries: Any): ...
def get_leveln_parent_accounts(account_names: Any, level: Any, nrepeats: int = ...): ...
def get_dict_accounts(account_names: Any): ...
def get_min_max_dates(entries: Any, types: Optional[Any] = ...): ...
def get_active_years(entries: Any) -> None: ...
def get_account_open_close(entries: Any): ...
def get_commodity_directives(entries: Any): ...
def get_values_meta(name_to_entries_map: Any, *meta_keys: Any, default: Optional[Any] = ...): ...
