import unittest
from beancount.core import convert as convert, display_context as display_context, position as position
from beancount.core.amount import A as A, Amount as Amount
from beancount.core.number import D as D, ZERO as ZERO
from beancount.core.position import Cost as Cost, Position as Position, from_amounts as from_amounts, from_string as from_string
from typing import Any

class TestCost(unittest.TestCase):
    dformat: Any = ...
    def test_cost_to_str__detail(self) -> None: ...
    def test_cost_to_str__simple(self) -> None: ...

class TestCostSpec(unittest.TestCase):
    dformat: Any = ...
    def test_cost_to_str__detail(self) -> None: ...
    def test_cost_to_str__simple(self) -> None: ...

class TestPosition(unittest.TestCase):
    def test_from_string__empty(self) -> None: ...
    def test_from_string__simple(self) -> None: ...
    def test_from_string__with_spaces(self) -> None: ...
    def test_from_string__with_cost(self) -> None: ...
    def test_from_string__with_cost_and_date(self) -> None: ...
    def test_from_string__with_label(self) -> None: ...
    def test_from_string__with_compound_cost(self) -> None: ...
    def test_from_string__with_everything(self) -> None: ...
    def test_from_string__missing_currency(self) -> None: ...
    def test_str(self) -> None: ...
    def test_to_string(self) -> None: ...
    def test_to_string_no_detail(self) -> None: ...
    def test_from_amounts(self) -> None: ...
    def test_constructors(self) -> None: ...
    def test_compare_zero_to_none(self) -> None: ...
    def test_neg(self) -> None: ...
    def test_abs(self) -> None: ...
    def test_mul(self) -> None: ...
    def test_eq_and_sortkey(self) -> None: ...
    def test_eq_and_sortkey__bycost(self) -> None: ...
    def test_copy(self) -> None: ...
    def test_quantities(self) -> None: ...
    def test_negative(self) -> None: ...
    def test_is_negative_at_cost(self) -> None: ...
    def test_currency_pair(self) -> None: ...
