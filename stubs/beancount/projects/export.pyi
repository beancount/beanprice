from beancount import loader as loader
from beancount.core import account as account, account_types as account_types, data as data, flags as flags, getters as getters, prices as prices
from beancount.core.number import D as D, ONE as ONE
from beancount.ops import summarize as summarize
from beancount.parser import options as options
from decimal import Decimal
from typing import Any, Dict, List, Set, Tuple

def validate_entries(entries: data.Entries) -> Any: ...
Header = List[str]
Rows = List[List[Any]]
Table: Any

def get_metamap_table(metamap: Dict[str, data.Directive], attributes: List[str], getter: Any) -> Table: ...
def get_commodities_table(entries: data.Entries, attributes: List[str]) -> Table: ...
def get_accounts_table(entries: data.Entries, attributes: List[str]) -> Table: ...
def abbreviate_account(acc: str, accounts_map: Dict[str, data.Open]) -> Any: ...
def get_postings_table(entries: data.Entries, options_map: Dict, accounts_map: Dict[str, data.Open], threshold: Decimal=...) -> Table: ...

PRICE_Q: Any

def get_prices_table(entries: data.Entries, main_currency: str) -> Table: ...
def get_rates_table(entries: data.Entries, currencies: Set[str], main_currency: str) -> Table: ...
def join(main_table: Table, *col_tables: Tuple[Tuple[Tuple[str], Table]]) -> Table: ...
def reorder_columns(table: Table, new_headers: List[str]) -> Table: ...
def write_table(table: Table, outfile: str) -> Any: ...
def main(): ...
