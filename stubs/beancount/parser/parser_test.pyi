import unittest
from beancount.core import data as data
from beancount.core.number import D as D
from beancount.parser import grammar as grammar, lexer as lexer, parser as parser
from beancount.utils import test_utils as test_utils
from typing import Any

class TestCompareTestFunctions(unittest.TestCase):
    def test_is_entry_incomplete(self) -> None: ...

class TestParserDoc(unittest.TestCase):
    def test_parse_doc__disabled(self, entries: Any, errors: Any, options_map: Any) -> None: ...
    def test_parse_doc__errors(self, _: Any, __: Any, ___: Any) -> None: ...
    def test_parse_doc__noerrors(self, _: Any, __: Any, ___: Any) -> None: ...

class TestParserInputs(unittest.TestCase):
    INPUT: Any = ...
    def test_parse_string(self) -> None: ...
    def test_parse_filename(self) -> None: ...
    def test_parse_file(self) -> None: ...
    @classmethod
    def parse_stdin(cls) -> None: ...
    def test_parse_stdin(self) -> None: ...
    def test_parse_None(self) -> None: ...

class TestUnicodeErrors(unittest.TestCase):
    test_utf8_string: Any = ...
    expected_utf8_string: str = ...
    test_latin1_string: Any = ...
    expected_latin1_string: str = ...
    def test_bytes_encoded_utf8(self) -> None: ...
    def test_bytes_encoded_incorrect(self) -> None: ...
    def test_bytes_encoded_latin1(self) -> None: ...
    def test_bytes_encoded_invalid(self) -> None: ...

class TestTestUtils(unittest.TestCase):
    def test_parse_many(self) -> None: ...
    def test_parse_one(self) -> None: ...

class TestReferenceCounting(unittest.TestCase):
    def test_parser_lex(self) -> None: ...
    def test_parser_lex_filename(self) -> None: ...
    def test_parser_lex_multi(self) -> None: ...
    def test_parser_parse(self) -> None: ...

class TestLineno(unittest.TestCase):
    def test_lex(self) -> None: ...
    def test_lex_lineno(self) -> None: ...
    def test_parse(self) -> None: ...
    def test_parse_lineno(self) -> None: ...
    def test_parse_string(self) -> None: ...
    def test_parse_string_lineno(self) -> None: ...
    def test_parse_doc(self, entries: Any, errors: Any, _: Any) -> None: ...
