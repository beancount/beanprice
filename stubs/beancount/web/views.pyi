import enum
from beancount.core import data as data, realization as realization
from beancount.ops import summarize as summarize
from beancount.parser import options as options
from beancount.utils import date_utils as date_utils, misc_utils as misc_utils
from typing import Any

class MonthNavigation(enum.Enum):
    NONE: int = ...
    COMPACT: int = ...
    FULL: int = ...

class View:
    all_entries: Any = ...
    entries: Any = ...
    opening_entries: Any = ...
    closing_entries: Any = ...
    title: Any = ...
    real_accounts: Any = ...
    opening_real_accounts: Any = ...
    closing_real_accounts: Any = ...
    monthly: Any = ...
    def __init__(self, all_entries: Any, options_map: Any, title: Any) -> None: ...
    def apply_filter(self, entries: Any) -> None: ...

class EmptyView(View):
    def __init__(self, entries: Any, options_map: Any, title: Any, *args: Any, **kw: Any) -> None: ...
    def apply_filter(self, _: Any, __: Any): ...

class AllView(View):
    def apply_filter(self, entries: Any, options_map: Any): ...

class YearView(View):
    year: Any = ...
    first_month: Any = ...
    monthly: Any = ...
    def __init__(self, entries: Any, options_map: Any, title: Any, year: Any, first_month: int = ...) -> None: ...
    def apply_filter(self, entries: Any, options_map: Any): ...

class MonthView(View):
    year: Any = ...
    month: Any = ...
    monthly: Any = ...
    def __init__(self, entries: Any, options_map: Any, title: Any, year: Any, month: Any) -> None: ...
    def apply_filter(self, entries: Any, options_map: Any): ...

class TagView(View):
    tags: Any = ...
    def __init__(self, entries: Any, options_map: Any, title: Any, tags: Any) -> None: ...
    def apply_filter(self, entries: Any, options_map: Any): ...

class PayeeView(View):
    payee: Any = ...
    def __init__(self, entries: Any, options_map: Any, title: Any, payee: Any) -> None: ...
    def apply_filter(self, entries: Any, options_map: Any): ...

class ComponentView(View):
    component: Any = ...
    def __init__(self, entries: Any, options_map: Any, title: Any, component: Any) -> None: ...
    def apply_filter(self, entries: Any, options_map: Any): ...
