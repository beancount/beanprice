import unittest
from beancount import loader as loader
from beancount.query import shell as shell
from beancount.utils import test_utils as test_utils
from typing import Any

entries: Any
errors: Any
options_map: Any

def setup_module() -> None: ...
def runshell(function: Any): ...

class TestUseCases(unittest.TestCase):
    def test_print_from(self, output: Any) -> None: ...
    def test_accounts(self, output: Any) -> None: ...
    def test_commodities(self, output: Any) -> None: ...
    def test_commodities_cost(self, output: Any) -> None: ...
    def test_commodities_pairs(self, output: Any) -> None: ...
    def test_balances(self, output: Any) -> None: ...
    def test_balances_with_where(self, output: Any) -> None: ...
    def test_balance_sheet(self, output: Any) -> None: ...
    def test_income_statement(self, output: Any) -> None: ...
    def test_journal(self, output: Any) -> None: ...
    def test_conversions(self, output: Any) -> None: ...
    def test_documents(self, output: Any) -> None: ...
    def test_holdings(self, output: Any) -> None: ...

class TestRun(unittest.TestCase):
    def test_run_custom__list(self, output: Any) -> None: ...
    def test_run_custom__query_not_exists(self, output: Any) -> None: ...
    def test_run_custom__query_id(self, output: Any) -> None: ...
    def test_run_custom__query_string(self, output: Any) -> None: ...
    def test_run_custom__all(self, output: Any) -> None: ...

class TestShell(test_utils.TestCase):
    def test_success(self, filename: Any) -> None: ...

__incomplete__: bool
