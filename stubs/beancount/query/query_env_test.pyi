import unittest
from beancount.core import amount as amount, inventory as inventory, position as position
from beancount.core.number import D as D
from beancount.parser import parser as parser
from beancount.query import query as query
from typing import Any

class TestCompileDataTypes(unittest.TestCase):
    def test_compile_EvalLength(self) -> None: ...
    def test_compile_EvalYear(self) -> None: ...
    def test_compile_EvalMonth(self) -> None: ...
    def test_compile_EvalDay(self) -> None: ...
    def test_compile_EvalUnits(self) -> None: ...
    def test_compile_EvalCost(self) -> None: ...
    def test_compile_EvalSum(self) -> None: ...
    def test_compile_EvalCount(self) -> None: ...
    def test_compile_EvalFirst(self) -> None: ...
    def test_compile_EvalLast(self) -> None: ...
    def test_compile_columns(self) -> None: ...

class TestEnv(unittest.TestCase):
    def test_AnyMeta(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_GrepN(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_Subst(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_Upper(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_Lower(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_Coalesce(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_Date(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_DateDiffAdjust(self, entries: Any, _: Any, options_map: Any) -> None: ...
