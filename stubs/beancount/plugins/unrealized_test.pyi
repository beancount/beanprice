import unittest
from beancount import loader as loader
from beancount.core import data as data
from beancount.core.number import D as D, ZERO as ZERO
from beancount.ops import validation as validation
from beancount.parser import options as options
from beancount.plugins import unrealized as unrealized
from typing import Any

def get_entries_with_narration(entries: Any, regexp: Any): ...

class TestUnrealized(unittest.TestCase):
    def test_empty_entries(self) -> None: ...
    def test_nothing_held_at_cost(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_normal_case(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_no_price(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_immediate_profit(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_conversions_only(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_with_subaccount(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_not_assets(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_create_open_directive(self, entries: Any, errors: Any, options_map: Any) -> None: ...
    def test_no_units_but_leaked_cost_basis(self, entries: Any, errors: Any, options_map: Any) -> None: ...
