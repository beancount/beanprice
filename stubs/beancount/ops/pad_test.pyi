from beancount import loader as loader
from beancount.core import data as data, inventory as inventory, realization as realization
from beancount.core.amount import A as A
from beancount.ops import balance as balance, pad as pad
from beancount.parser import cmptest as cmptest
from typing import Any

class TestPadding(cmptest.TestCase):
    def test_pad_simple(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_to_zero(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_no_overflow(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_used_twice_legally(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_used_twice_illegally(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_unused(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_parents(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_multiple_currencies(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_check_balances(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_multiple_times(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_at_cost(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_parent(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_tolerance(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_zero_padding_issue78a(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_zero_padding_issue78a_original(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_zero_padding_issue78b(self, entries: Any, errors: Any, __: Any) -> None: ...
    def test_pad_issue362(self, entries: Any, errors: Any, __: Any) -> None: ...
