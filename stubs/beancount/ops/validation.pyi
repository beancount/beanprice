from beancount.core import data as data, getters as getters, interpolate as interpolate
from beancount.core.data import Balance as Balance, Close as Close, Document as Document, Note as Note, Open as Open, Transaction as Transaction
from beancount.utils import misc_utils as misc_utils
from collections import namedtuple
from typing import Any, Optional

ValidationError = namedtuple('ValidationError', 'source message entry')
ALLOW_AFTER_CLOSE: Any

def validate_open_close(entries: Any, unused_options_map: Any): ...
def validate_duplicate_balances(entries: Any, unused_options_map: Any): ...
def validate_duplicate_commodities(entries: Any, unused_options_map: Any): ...
def validate_active_accounts(entries: Any, unused_options_map: Any): ...
def validate_currency_constraints(entries: Any, options_map: Any): ...
def validate_documents_paths(entries: Any, options_map: Any): ...
def validate_data_types(entries: Any, options_map: Any): ...
def validate_check_transaction_balances(entries: Any, options_map: Any): ...

BASIC_VALIDATIONS: Any
HARDCORE_VALIDATIONS: Any
VALIDATIONS = BASIC_VALIDATIONS

def validate(entries: Any, options_map: Any, log_timings: Optional[Any] = ..., extra_validations: Optional[Any] = ...): ...
