import unittest
from beancount import loader as loader
from beancount.core import data as data, position as position, prices as prices
from beancount.core.amount import A as A
from beancount.core.number import D as D, ZERO as ZERO
from beancount.ops import holdings as holdings
from typing import Any

class TestHoldings(unittest.TestCase):
    maxDiff: int = ...
    def test_get_final_holdings(self, entries: Any, _: Any, __: Any) -> None: ...
    def test_get_final_holdings__check_no_aggregates(self, entries: Any, _: Any, __: Any) -> None: ...
    def test_get_final_holdings_with_prices(self, entries: Any, _: Any, __: Any) -> None: ...
    def test_get_final_holdings__zero_position(self, entries: Any, _: Any, __: Any) -> None: ...
    def test_get_commodities_at_date(self, entries: Any, _: Any, options_map: Any) -> None: ...
    def test_aggregate_holdings_list(self) -> None: ...
    def test_aggregate_holdings_by__commodity(self): ...
    def test_aggregate_holdings_by__account(self): ...
    def test_aggregate_holdings__same_price_same_date(self): ...
    def test_aggregate_holdings__diff_price_same_date(self): ...
    def test_aggregate_holdings__same_price_diff_date(self): ...
    def test_aggregate_holdings__diff_price_diff_date(self): ...
    def test_convert_to_currency(self, entries: Any, _: Any, __: Any) -> None: ...
    def test_reduce_relative(self) -> None: ...
    def test_scale_holding(self) -> None: ...
    def test_holding_to_position(self) -> None: ...
    def test_holding_to_posting(self) -> None: ...

class TestHoldingsMisc(unittest.TestCase):
    entries: Any = ...
    errors: Any = ...
    options_map: Any = ...
    def setUp(self, entries: Any, errors: Any, options_map: Any) -> None: ...
    def test_get_assets_holdings(self) -> None: ...
