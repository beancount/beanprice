from beancount.core import amount as amount, getters as getters, prices as prices
from beancount.core.number import D as D, ZERO as ZERO
from beancount.ops import holdings as holdings
from beancount.reports import base as base
from collections import namedtuple
from typing import Any

FIELD: str

ExportEntry = namedtuple('ExportEntry', 'symbol cost_currency number cost_number mutual_fund memo holdings')

def is_mutual_fund(ticker: Any): ...
def classify_holdings_for_export(holdings_list: Any, commodities_map: Any): ...
def get_money_instruments(commodities_map: Any): ...
def export_holdings(entries: Any, options_map: Any, promiscuous: Any, aggregate_by_commodity: bool = ...): ...
def render_ofx_date(dtime: Any): ...
def get_symbol(sources: Any, prefer: str = ...): ...

class ExportPortfolioReport(base.TableReport):
    names: Any = ...
    default_format: str = ...
    PREFIX: Any = ...
    TEMPLATE: Any = ...
    TRANSACTION: Any = ...
    SECURITY: Any = ...
    @classmethod
    def add_args(cls, parser: Any) -> None: ...
    EXPORT_FORMAT: str = ...
    HOLDING_FORMAT: str = ...
    def render_csv(self, entries: Any, unused_errors: Any, options_map: Any, file: Any) -> None: ...
    def render_ofx(self, entries: Any, unused_errors: Any, options_map: Any, file: Any) -> None: ...

__reports__: Any
