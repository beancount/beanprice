from beancount.core import amount as amount, data as data, getters as getters, prices as prices
from beancount.ops import lifetimes as lifetimes
from beancount.parser import printer as printer
from beancount.reports import base as base, gviz as gviz
from beancount.utils import table as table
from typing import Any

class CommoditiesReport(base.TableReport):
    names: Any = ...
    default_format: str = ...
    def generate_table(self, entries: Any, errors: Any, options_map: Any): ...

class CommodityLifetimes(base.TableReport):
    names: Any = ...
    default_format: str = ...
    @classmethod
    def add_args(cls, parser: Any) -> None: ...
    def render_text(self, entries: Any, errors: Any, options_map: Any, file: Any): ...

class CommodityPricesReport(base.TableReport):
    names: Any = ...
    default_format: str = ...
    @classmethod
    def add_args(cls, parser: Any) -> None: ...
    def get_date_rates(self, entries: Any): ...
    def generate_table(self, entries: Any, errors: Any, options_map: Any): ...
    def render_htmldiv(self, entries: Any, errors: Any, options_map: Any, file: Any) -> None: ...

class PricesReport(base.Report):
    names: Any = ...
    default_format: str = ...
    def render_beancount(self, entries: Any, errors: Any, options_map: Any, file: Any) -> None: ...

class PriceDBReport(base.Report):
    names: Any = ...
    default_format: str = ...
    def render_beancount(self, entries: Any, errors: Any, options_map: Any, file: Any) -> None: ...

class TickerReport(base.TableReport):
    names: Any = ...
    def generate_table(self, entries: Any, errors: Any, options_map: Any): ...

__reports__: Any
