from beancount.core import account as account, convert as convert, data as data, flags as flags, prices as prices
from beancount.core.number import D as D, ZERO as ZERO
from beancount.ops import holdings as holdings, summarize as summarize
from beancount.parser import options as options, printer as printer
from beancount.reports import base as base
from beancount.utils import table as table
from typing import Any, Optional

FIELD_SPEC: Any
RELATIVE_FIELD_SPEC: Any

def get_holdings_entries(entries: Any, options_map: Any): ...
def report_holdings(currency: Any, relative: Any, entries: Any, options_map: Any, aggregation_key: Optional[Any] = ..., sort_key: Optional[Any] = ...): ...
def load_from_csv(fileobj: Any) -> None: ...

class HoldingsReport(base.TableReport):
    names: Any = ...
    aggregations: Any = ...
    def __init__(self, *rest: Any, **kwds: Any) -> None: ...
    @classmethod
    def add_args(cls, parser: Any) -> None: ...
    def generate_table(self, entries: Any, errors: Any, options_map: Any): ...
    def render_beancount(self, entries: Any, errors: Any, options_map: Any, file: Any) -> None: ...

class CashReport(base.TableReport):
    names: Any = ...
    @classmethod
    def add_args(cls, parser: Any) -> None: ...
    def generate_table(self, entries: Any, errors: Any, options_map: Any): ...

def calculate_net_worths(entries: Any, options_map: Any): ...

class NetWorthReport(base.TableReport):
    names: Any = ...
    def generate_table(self, entries: Any, errors: Any, options_map: Any): ...

__reports__: Any
