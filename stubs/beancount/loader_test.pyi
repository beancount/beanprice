import importlib
import unittest
from beancount import loader as loader
from beancount.parser import parser as parser
from beancount.utils import encryption_test as encryption_test, test_utils as test_utils
from typing import Any

TEST_INPUT: str

def get_failing_plugin_module(exc_type: Any): ...
real_import_module = importlib.import_module

def mock_import_module(exc_type: Any, plugin_name: Any): ...

class TestLoader(unittest.TestCase):
    def test_import_exception(self) -> None: ...
    def test_import_other_exception(self, _: Any) -> None: ...
    def test_run_transformation_exception(self) -> None: ...
    def test_run_transformation_systemexit(self) -> None: ...
    def test_run_transformations(self) -> None: ...
    def test_load(self) -> None: ...
    def test_load_string(self) -> None: ...
    def test_load_nonexist(self) -> None: ...
    def test_renamed_plugin_warnings(self, warn: Any) -> None: ...

class TestLoadDoc(unittest.TestCase):
    def test_load_doc(self) -> None: ...
    def test_load_doc_empty(self, entries: Any, errors: Any, options_map: Any) -> None: ...
    def test_load_doc_plugin(self, entries: Any, errors: Any, options_map: Any) -> None: ...
    def test_load_doc_plugin_auto_pythonpath(self) -> None: ...

class TestLoadIncludes(unittest.TestCase):
    def test_load_file_no_includes(self) -> None: ...
    def test_load_file_nonexist(self) -> None: ...
    def test_load_file_with_nonexist_include(self) -> None: ...
    def test_load_file_with_absolute_include(self) -> None: ...
    def test_load_file_with_relative_include(self) -> None: ...
    def test_load_file_with_multiple_includes(self) -> None: ...
    def test_load_file_with_duplicate_includes(self) -> None: ...
    def test_load_string_with_relative_include(self) -> None: ...
    def test_load_file_return_include_filenames(self) -> None: ...

class TestLoadIncludesEncrypted(encryption_test.TestEncryptedBase):
    def test_include_encrypted(self) -> None: ...

class TestLoadCache(unittest.TestCase):
    num_calls: int = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...
    def test_load_cache(self) -> None: ...
    def test_load_cache_moved_file(self) -> None: ...
    def test_load_cache_read_only_fs(self, remove_mock: Any, warn_mock: Any) -> None: ...
    def test_load_cache_override_filename_pattern_by_env_var(self) -> None: ...
    def test_load_cache_override_filename_pattern_by_argument(self) -> None: ...
    def test_load_cache_disable(self) -> None: ...

class TestEncoding(unittest.TestCase):
    def test_string_unicode(self) -> None: ...
    def test_string_latin1(self) -> None: ...

class TestOptionsAggregation(unittest.TestCase):
    def test_aggregate_operating_currencies(self) -> None: ...
