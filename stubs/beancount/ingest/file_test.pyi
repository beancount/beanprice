from beancount.ingest import file as file, scripts_utils as scripts_utils
from beancount.utils import file_utils as file_utils, test_utils as test_utils
from typing import Any

file_main: Any

class TestScriptFile(scripts_utils.TestScriptsBase, test_utils.TestCase):
    downloads: Any = ...
    documents: Any = ...
    def setUp(self) -> None: ...
    def test_file_main__default_output_dir(self, file_mock: Any) -> None: ...
    def test_file_main__output_dir_does_not_exist(self) -> None: ...
    def test_move_xdev_file(self) -> None: ...
    def test_file__no_match(self, move_mock: Any) -> None: ...
    def test_file__ambiguous_accounts(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__two_importers_same_accounts(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__date_uses_mtime(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__date_uses_extracted(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__file_name(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__idify(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__dest_dir_does_not_exist(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__overwrite(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__collision_in_renamed_files(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__dry_run(self, move_mock: Any, error_mock: Any) -> None: ...
    def test_file__file_account_raises_exception(self, error_mock: Any) -> None: ...
    def test_file__file_date_raises_exception(self, error_mock: Any) -> None: ...
    def test_file__file_name_raises_exception(self, error_mock: Any) -> None: ...
    def test_file(self) -> None: ...
    def test_file_examples(self) -> None: ...
