import unittest
from beancount.ingest import cache as cache, extract as extract, file as file, identify as identify, importer as importer
from beancount.parser import version as version
from beancount.utils import test_utils as test_utils
from typing import Any, Optional

DESCRIPTION: str

def identify_main(): ...
def extract_main(): ...
def file_main(): ...
def ingest(importers_list: Any, detect_duplicates_func: Optional[Any] = ..., hooks: Optional[Any] = ...): ...
def create_legacy_arguments_parser(description: str, run_func: callable) -> Any: ...
def trampoline_to_ingest(module: Any): ...
def run_import_script_and_ingest(parser: Any, argv: Optional[Any] = ..., importers_attr_name: str = ...): ...

class _TestFileImporter(importer.ImporterProtocol):
    account: Any = ...
    regexp_mime: Any = ...
    regexp_contents: Any = ...
    def __init__(self, name: Any, account: Any, regexp_mime: Any, regexp_contents: Any) -> None: ...
    def name(self): ...
    def identify(self, file: Any): ...
    def file_account(self, _: Any): ...

IMPORT_FILE: str
INGEST_MAIN: str
OFX_FILE: str
CSV_FILE: str
TXT_FILE: str

class TestScriptsBase(test_utils.TestTempdirMixin, unittest.TestCase):
    FILES: Any = ...
    def setUp(self) -> None: ...
