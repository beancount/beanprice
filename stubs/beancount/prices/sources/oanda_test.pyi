import unittest
from beancount.core.number import D as D
from beancount.prices import source as source
from beancount.prices.sources import oanda as oanda
from beancount.utils import date_utils as date_utils, net_utils as net_utils
from typing import Any, Optional

def response(code: Any, contents: Optional[Any] = ...): ...

class TestOandaMisc(unittest.TestCase):
    def test_get_currencies(self) -> None: ...
    def test_get_currencies_invalid(self) -> None: ...

class TimezoneTestBase:
    tz_old: Any = ...
    def setUp(self) -> None: ...
    def tearDown(self) -> None: ...

class TestOandaFetchCandles(TimezoneTestBase, unittest.TestCase):
    def test_null_response(self) -> None: ...
    def test_key_error(self) -> None: ...
    def test_valid(self) -> None: ...

class TestOandaGetLatest(unittest.TestCase):
    fetcher: Any = ...
    def setUp(self) -> None: ...
    def test_invalid_ticker(self) -> None: ...
    def test_no_candles(self) -> None: ...
    def test_valid(self) -> None: ...

class TestOandaGetHistorical(TimezoneTestBase, unittest.TestCase):
    fetcher: Any = ...
    def setUp(self) -> None: ...
    def test_invalid_ticker(self) -> None: ...
    def test_no_candles(self) -> None: ...
    def test_valid_same_date(self) -> None: ...
    def test_valid_before(self) -> None: ...
    def test_valid_after(self) -> None: ...
